import gmpy2
import sympy
import math
#多元方程组

# x = sympy.Symbol('x')
# y = sympy.Symbol("y")
# z = sympy.Symbol("z")
# a = math.factorial(2020)
# print(a)
# print(hex(int(str(a)[:8])))
#
# x = pow(520,1314) + pow(2333,666)
# print(x)
# print(hex(int(str(x)[:8])))
#
# solved_value = sympy.solve([3*x-y+z-185,2*x+3*y-z-321,x+y+z-173 ],[x,y,z])
# print(solved_value)

#素数
# sub_q = 168992529793593315757895995101430241994953638330919314800130536809801824971112039572562389449584350643924391984800978193707795909956472992631004290479273525116959461856227262232600089176950810729475058260332177626961286009876630340945093629959302803189668904123890991069113826241497783666995751391361028949651
# q1 = 103766439849465588084625049495793857634556517064563488433148224524638105971161051763127718438062862548184814747601299494052813662851459740127499557785398714481909461631996020048315790167967699932967974484481209879664173009585231469785141628982021847883945871201430155071257803163523612863113967495969578605521
# q2 = 151010734276916939790591461278981486442548035032350797306496105136358723586953123484087860176438629843688462671681777513652947555325607414858514566053513243083627810686084890261120641161987614435114887565491866120507844566210561620503961205851409386041194326728437073995372322433035153519757017396063066469743
# q = pow(sub_q,q2,q1)
# #q = sub_q ** q2 % q1
# print(sympy.nextprime(q))
#
# P = [0 for i in range(17)]
# P[9] = 206027926847308612719677572554991143421
# n = 206027926847308612719677572554991143421
# phi = 206027926847308612719677572554991143420
# c = 213671742765908980787116579976289600595864704574134469173111790965233629909513884704158446946409910475727584342641848597858942209151114627306286393390259700239698869487469080881267182803062488043469138252786381822646126962323295676431679988602406971858136496624861228526070581338082202663895710929460596143281673761666804565161435963957655012011051936180536581488499059517946308650135300428672486819645279969693519039407892941672784362868653243632727928279698588177694171797254644864554162848696210763681197279758130811723700154618280764123396312330032986093579531909363210692564988076206283296967165522152288770019720928264542910922693728918198338839
# for i in range(10,17):
#     P[i] = sympy.nextprime(P[i-1])
#     print(i, P[i])
#     n*= P[i]
#     phi *= P[i]-1
# for i in range(8,0,-1):
#     P[i] = sympy.prevprime(P[i+1])
#     print(i,P[i])
#     n *= P[i]
#     phi *= P[i]-1
# print(n)
# e = 65537
# d = gmpy2.invert(e,phi)
# p = pow(c,d,n)
# print(p)
# print(sympy.nextprime(p))
p = 118153578345562250550767057731385782963063734586321112579869747650001448473633860305142281504862521928246520876300707405515141444727550839066835195905927281903880307860942630322499106164191736174201506457157272220802515607939618476716593888428832962374494147723577980992661629254713116923690067827155668889571
q = 118975085954858660642562584152139261422493348532593400307960127317249511761542030451912561362687361053191375307180413931721355251895350936376781657674896801388806379750757264377396608174235075021854614328009897408824235800167369204203680938298803752964983358298299699273425596382268869237139724754214443556383
factor2 = 2021 * p + 2020 * q
if factor2 < 0:
    factor2 = (-1) * factor2
print(sympy.nextprime(factor2))
