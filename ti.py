from Crypto.Util.number import *
import gmpy2,sympy

N1 = 0x5ebec0dfab6a6c6afb9a4e5da3d72c1621c1bc23d2e38037a656979228819b494fb8d16fa21d9e1e3a7fb1df1e72fe444de39856d1e8a64733a21db3d9948e0749e3a9f6cb53a842bde5650efd47bbd92282b8a1d0746431c6710600478dd6fea4acde89aad26d1128454a4b687f947c348ef17d6d900bb83a9a205af22b054b9cc95957aaaf3fbc01fd90c6389dc6ac8fbe6a17a800561ca34e77770e0829b3ea281ac06e96426c6123d2748563ce90f229143867f44cf9db378f8d580dc8a21fa773d38077db900d10e94c3a8db37d2b4579ab423e4b67c161f4c409acba205dc5441557cb044d1d87142f29a2904f66df08fbf20a1bb63449c08f20123683ace541c38126de26aedad585be319bfc43b8670af54dfd9513e68c8ad025be8ca6eb4fdfb9ecc62cd73d568154863342587404c4f97af3ff5ef9deb98d95a34bc414545
E1 = 0xace1e5178e60152dec4d1a87075fa2fd14e235a1c525473deee07359fbd2eb6c8dc4dbb47cb498d1488e7632a08f1d8096e22d714ca7bceb11b9ab4b2255410ebcf09448554bbfe135f95a20b08d72e6a3d082ba2f29d6862e121304d066c40e8641ab91ef47346205ca144465a9b802fb6e355243ce350e5fd2a5d91f285f9b
C1 = 0x2c1f7f63af4defe1e5f301f61b0a5a73ee774f54b5a50a496b45566dddc0366914aae66b3c58919996f83bbac2bd1bdfddcaa0a596d5b022a89bf8cac5050cc87201f1ede73c865e368f5cc4f7d905dbad8416f125fdfcd6e12e42a72c5fbcbf3cc1d9788a018a28736219d7c2bff3b218a576a0169cda3b7b823fbbaeb96452ff84c121c5f7477d446c857831313166b04c39fe70c9291b715ddb3876739c83a5bcb3de7bbb277de997a53bdcf4f08e997d2aa93991ffa7debc38971cbe533b3125910140989e936fcfa7f828e85e2a2d45ee9f2481911a84ed92c7f30885f50c8036f4b3e1f0d2b9bce2eb38ccc99bfe6e46158bea5470d129fc73c7d47e1723b55f0f3dd96d459c8983f2fea469d0c0eecd490018ba8f35ba1fee9f57f6616e3c8c3a7e608236ed95aef148f3abef4c43373e6b08c6b3f77df614efb7e6ea6ba83f5
N2 = 0x5ebec0dfab6a6c6afb9a4e5da3d72c1621c1bc23d2e38037a656979228819b494fb8d16fa21d9e1e3a7fb1df1e72fe444de39856d1e8a64733a21db3d9948ed999c4262aa3071fbbfd13dc2db35c111e482b42f65797233a68ffe6e3c560dc4acbc92ff9c096c8c1329cbf6696eb819aa6c70f9125701c0692ddc2c5b12f4567a8487b16d76ed77e72708e54ab065bc40d97bc95c0b60b5969a7538c1052e5485b0d7ade9ceb37aa54d06700775252f072cb630e302c028d11660bcfb7eee27965b5b304740847892cbe484e32da582c4f95d37f31c6b491e8eb75197ee6a9d2b170d36207533461f437c6db5d5ef3655d5680386b7844ce9606e243901573ed751410dab31ea05420c9509b24668113f56674f953a34489bf0df3f5386c8b18be7e21303c64954654a8980434e402b8296ce9f146170d366d44b89409d27333798760d
E2 = 0xf730f6095008ee729f0f76c974339979eb615fe10ec7f7adb73796c1886b64f66af8dd8c8dd2b948c043f5a1e0cfcf566c2c7bde244f886605fdf72095777df272dea261f3202a6fb8ff39912c41cc3392a42d5cb7758b28e81f82f11169e45c4d8a487e31d7bf841e5ff277d40dad5345346179bb067cec4c992f1be2736af5
C2 = 0x39bf2974e3153d2c512d5ac8dba8fb6a3cb6df983d51f068f5607db711587991c39b89ddb4f7a6ea3651db93120d30aa38b76da9096eafa7fde9e4e20eed5681c2c980d898d5caba1d98158a15b96041d05e3b7191c2338b56bbf97d32fa335bea6ff4a860ab7fbe33fe9b995f581b0f6dd7d751613e376c1779a797222526323abf187f3fc5ca6c34c3a09ea877321d0bb770189844cabca20c69d84472e556665e98a2bb9b9875d6c5089fd28c6b48a252f8cb088731dc5aea88281442d78a18faa4c6a1474d624703ab1f2aa9a87d2ab2ab9f311bfa7615c8e1c092b0da77f6e6c1aebc44de361c2486ffb769ad209438f130feac6158bcb133e003171b6f5d100cef855d18c911a2df1456e0db97cccc97eb2278135126fb19d6e62ba19ec6fcc65de359b7b7cfc25225e588ea3871eea2fd5495b6378ff248505be94a3116ddc3e

def exgcd(x,y):
    mult = []
    if y > x:
        x,y = y,x
    while y:
        mult.append(x//y)
        x,y = y,x % y
    return mult

mult = exgcd(N2,N1) # N1<N2

for n in range(len(mult)):
    temp = mult[:n]
    num = 0 # 分子
    deno = 1 # 分母
    for x in temp[::-1]:
        num,deno = deno, deno * x + num
    if N2 % deno == 0 and deno != 1:
        Q2 = deno
        print(Q2)
        break
Q1 = sympy.prevprime(Q2)
P1 = gmpy2.iroot(N1 // Q1,2)[0]
P2 = gmpy2.iroot(N2 // Q2,2)[0]
fai_n1 = (P1-1)*P1*(Q1-1)
fai_n2 = (P2-1)*P2*(Q2-1)
d1 = gmpy2.invert(E1,fai_n1)
d2 = gmpy2.invert(E2,fai_n2)
m1 = pow(C1,d1,N1)
m2 = pow(C2,d2,N2)
print((long_to_bytes(m1)))
print(long_to_bytes(m2))
